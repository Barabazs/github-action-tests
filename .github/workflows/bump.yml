on:
  pull_request:
    types: [labeled, unlabeled]

jobs:
  run_if_label_matches:
    if: contains(toJson(github.event.pull_request.labels.*.name), 'ready to merge') && (contains(toJson(github.event.pull_request.labels.*.name), 'minor') || contains(toJson(github.event.pull_request.labels.*.name), 'major') || contains(toJson(github.event.pull_request.labels.*.name), 'patch')) 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0      
      - name: Check for label and update version
        run: |
          LABEL_NAME=$(jq --raw-output '.label.name' "$GITHUB_EVENT_PATH")
          if [[ "$LABEL_NAME" == "major" || "$LABEL_NAME" == "minor" || "$LABEL_NAME" == "patch" ]]; then
            echo "label=$LABEL_NAME" >> $GITHUB_ENV
          fi 
      - name: Get current version and update
        shell: bash
        run: |
          api_version=$(git describe --abbrev=0 --tags)
          label="minor"
          IFS='.' read -a version_split <<< "${api_version}"
          current_major=${version_split[0]}
          current_minor=${version_split[1]}
          current_patch=${version_split[2]}
          if [[ $label = "major" ]]; then
            current_major=$(echo "$current_major + 1" | tr -d $'\r' | bc)
            current_minor=0
            current_patch=0
          elif [[ $label = "minor" ]]; then
            current_minor=$(echo "$current_minor + 1" | tr -d $'\r' | bc)
            current_patch=0
          elif [[ $label = "patch" ]]; then
            current_patch=$(echo "$current_patch + 1" | tr -d $'\r' | bc)
          fi
          
          
          # new_patch=$(echo "$current_patch + 1" | tr -d $'\r' | bc)
          new_version="${current_major}.${current_minor}.$current_patch"
          echo "Bumping packaging patch version from $api_version to $new_version"

      # - name: Commit and push if it has changed
      #   run: |
      #     PY_INIT_FILE_PATH="utils/__init__.py"
      #     sed -i "s/__version__ = .*/__version__ = \"$new_version\"/g" $PY_INIT_FILE_PATH

      # - name: Commit and push if it has changed
      #   run: |
      #     git config --global user.name 'GitHub Actions'
      #     git config --global user.email 'actions@github.com'
      #     git add -A
      #     git diff --quiet && git diff --staged --quiet || git commit -m "Update version"
      #     git push
