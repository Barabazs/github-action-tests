on:
  pull_request:
    types: [labeled]

jobs:
  run_if_label_matches:
    if: contains(toJson(github.event.pull_request.labels.*.name), 'ready to merge') && (contains(toJson(github.event.pull_request.labels.*.name), 'minor') || contains(toJson(github.event.pull_request.labels.*.name), 'major') || contains(toJson(github.event.pull_request.labels.*.name), 'patch'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Get current version and update
        run: bash .github/scripts/bump.sh

      - name: Commit and push if it has changed
        run: |
          PY_INIT_FILE_PATH="utils/__init__.py"
          sed -i "s/__version__ = .*/__version__ = \"$new_version\"/g" $PY_INIT_FILE_PATH

      - name: Commit and push if it has changed
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add -A
          git diff --quiet && git diff --staged --quiet || git commit -m "Update version"
          git push

      # - name: Merge PR
      # run: |
      # echo "head_ref: ${{ github.head_ref }}"
      # echo "base_ref: ${{ github.base_ref }}"
      # - uses: actions/checkout@v3
      #   with:
      #     ref: ${{ github.base_ref }}

      - name: Merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git pull && gh pr merge --squash

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}

      - name: Tag new version
        run: git tag "$new_version" && git push --tags
